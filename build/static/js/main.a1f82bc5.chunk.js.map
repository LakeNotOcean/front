{"version":3,"sources":["styles/addDataElement.module.css","styles/mainPage.module.css","styles/frontClass.module.css","common/enumTypes.ts","components/Navbar.tsx","addData.tsx","mainPage.tsx","components/net.ts","components/StyledForms.ts","components/CustomerSearch.tsx","components/OrderSearch.tsx","components/Revenue.tsx","frontClass.tsx","handlers/frontHandler.tsx","index.tsx"],"names":["module","exports","idType","SendType","NavBarState","AddData","props","_childElements","_childElementsWithId","state","displayAdd","isWait","display","bind","checkData","Map","i","childProps","length","ref","React","createRef","push","type","none","set","className","styles","addDataElement","this","title","addDataButton","onClick","dataFields","map","element","inputType","errorMessage","subButton","disabled","setState","isAccept","current","notDisplayError","inputValue","displayError","disable","output","forEach","sendData","isIdAccepted","value","key","get","clearInput","stopWaiting","el","notDisable","data","typeOfData","customer","dataBaseContr","pushCustomer","id_customer","fname","lname","date_of_birth","location","order","pushOrder","id_order","date_of_order","date_of_delivery","delivery_type","model","pushModel","id_model","name","price","category","storage","pushCategory","id_category","Component","InputData","isError","isDisabled","handleChange","e","currentTarget","console","log","inputFields","inputInfo","errorMes","placeholder","inputField","style","borderColor","onChange","MainPage","mainPage","info","greeting","links","to","link","NavBar","Bar","Links","Button","selected","navBarState","Revenue","_","setNavBarState","CustomerSearch","OrderSearch","styled","nav","ol","li","validate","req","status","JSON","parse","responseText","hasOwnProperty","Result","Div","div","Label","label","Input","input","Submit","queryCustomerOrders","customerId","xmlHttp","XMLHttpRequest","open","setRequestHeader","send","DisplayOrder","Td","DisplayCustomerOrders","TableDiv","Table","Th","orders","CustomerSearchForm","useState","setCustomerId","onSubmit","preventDefault","resp","json","RESULT","Array","isArray","setOrders","setResult","Success","NoOrders","error","ConnectionFailed","htmlFor","required","min","max","Math","pow","Number","target","Idle","result","jsxFail","jsxSuccess","NoCustomer","table","th","td","queryOrder","orderId","SearchForm","setOrderId","setOrder","NoOrder","Li","jsx","span","queryRevenue","start","end","replaceAll","RevenueForm","Date","startDate","endDate","DateOrderError","num","isNaN","setRevenue","setStartDate","setEndDate","NaN","revenue","Rev","Span","frontClass","_customerRef","_orderRef","_modelRef","_catRef","_dataBaseContr","ReactDOM","render","StrictMode","exact","path","component","addData","addDataElements","App","outputLink","document","getElementById","idCheck","handler","_front","url","_checkedId","front","cust","res","getResult","resMap","idChecked","stringify","cat","command","listOfArgs","response","setFront"],"mappings":"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","file":"static/js/main.a1f82bc5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addDataElement\":\"addDataElement_addDataElement__12nZr\",\"addDataButton\":\"addDataElement_addDataButton__3U4_9\",\"subButton\":\"addDataElement_subButton__3Cbeq\",\"dataFields\":\"addDataElement_dataFields__3Vwlk\",\"inputFields\":\"addDataElement_inputFields__21qd5\",\"inputInfo\":\"addDataElement_inputInfo__48VPm\",\"errorMes\":\"addDataElement_errorMes__3F9ed\",\"inputField\":\"addDataElement_inputField__OzLqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"mainPage_mainPage__En_GD\",\"info\":\"mainPage_info__FRpAc\",\"greeting\":\"mainPage_greeting__2s-BI\",\"links\":\"mainPage_links__nl4sw\",\"link\":\"mainPage_link__3_XeN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addData\":\"frontClass_addData__hulm4\",\"addDataElements\":\"frontClass_addDataElements__2WrJN\",\"link\":\"frontClass_link__3JhkH\",\"outputLink\":\"frontClass_outputLink__3ggnX\"};","export enum idType {\r\n  customer = \"customer\",\r\n  order = \"order\",\r\n  model = \"model\",\r\n  category = \"category\",\r\n  none = \"none\",\r\n}\r\n\r\nexport enum SendType {\r\n  customer = \"customer\",\r\n  order = \"order\",\r\n  model = \"model\",\r\n  category = \"category\",\r\n}\r\n","import styled from \"styled-components\";\n\nexport enum NavBarState {\n  Revenue,\n  CustomerSearch,\n  OrderSearch,\n}\n\nexport default function NavBar(props: {\n  navBarState: NavBarState,\n  setNavBarState: React.Dispatch<React.SetStateAction<NavBarState>>;\n}): JSX.Element {\n  return (\n    <Bar>\n      <Links>\n        <Button\n          selected={props.navBarState === NavBarState.Revenue}\n          onClick={(_) => props.setNavBarState(NavBarState.Revenue)}\n        >\n          Revenue\n        </Button>\n        <Button\n          selected={props.navBarState === NavBarState.CustomerSearch}\n          onClick={(_) => props.setNavBarState(NavBarState.CustomerSearch)}\n        >\n          Find Customer\n        </Button>\n        <Button\n          selected={props.navBarState === NavBarState.OrderSearch}\n          onClick={(_) => props.setNavBarState(NavBarState.OrderSearch)}\n        >\n          Find Order\n        </Button>\n      </Links>\n    </Bar>\n  );\n}\n\nconst Bar = styled.nav`\n  position: sticky;\n  top: 0px;\n  width: 100%;\n\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n\n  background-color: grey;\n`;\n\n// const Logo = styled.img`\n//   width: 50px;\n//   height: 50px;\n//   background-color: lightgrey;\n//   border: solid black 3px;\n//   border-radius: 10px;\n// `;\n\nconst Links = styled.ol`\n  padding-top: 2px;\n  padding-bottom: 2px;\n  list-style-type: none;\n`;\n\nconst Button = styled.li<{selected: boolean}>`\n  font-size: 2em;\n  color: ${props => props.selected ? \"white\" : \"white\"};\n  background-color: ${props => props.selected ? \"#444\" : \"grey\"};\n  cursor: default;\n\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: xx-large;\n\n  display: inline-block;\n\n  border: solid 1px;\n  padding-left: 2px;\n  padding-right: 2px;\n  &:hover {\n    color: white;\n    background-color: #555;\n  }\n`;\n","/* eslint-disable no-mixed-operators */\r\n\r\n\r\nimport React, {Component,  RefObject} from 'react';\r\nimport { IFrontHandler } from './common/commonInterfaces';\r\nimport { idType,  SendType } from './common/enumTypes';\r\nimport styles from './styles/addDataElement.module.css'\r\n\r\n// export interface InputPropsCallBack{\r\n//     title:string;\r\n//     inputType:string;\r\n//     errorMessage:string;\r\n//     inInputChange:(inputStr:string)=>void;\r\n// }\r\n\r\nexport interface InputProps{\r\n    title:string;\r\n    inputType:string;\r\n    errorMessage:string;\r\n    type:idType\r\n}\r\n\r\nexport interface InputState {\r\n    isError:boolean;\r\n    inputValue:string; \r\n    isDisabled:boolean;\r\n}\r\n\r\n\r\nexport interface AddDataProps {\r\n    childProps:Array<InputProps>;\r\n    title:string;   \r\n    dataBaseContr:IFrontHandler;\r\n    typeOfData:SendType;\r\n}\r\n\r\nexport interface AddDataState{\r\n    displayAdd:boolean;\r\n    isWait:boolean;\r\n}\r\n\r\nexport class AddData extends Component<AddDataProps,AddDataState>{\r\n\r\n    \r\n    private _childElements:Array<RefObject<InputData>>;\r\n    private _childElementsWithId:Map<idType,RefObject<InputData>>;\r\n\r\n    constructor(props:AddDataProps){\r\n        super(props)\r\n        this.state={displayAdd:false, isWait:false}\r\n        this.display=this.display.bind(this);\r\n        this.checkData=this.checkData.bind(this);\r\n        this._childElements=[];\r\n        this._childElementsWithId=new Map();\r\n        for (let i:number=0; i<this.props.childProps.length; ++i)\r\n        {\r\n            let ref=React.createRef<InputData>();\r\n            this._childElements.push(ref);\r\n            if (this.props.childProps[i].type!==idType.none)\r\n                this._childElementsWithId.set(this.props.childProps[i].type,ref);\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n         \r\n    }\r\n    componentDidUpdate(){\r\n        \r\n    }\r\n\r\n    render(){   \r\n        return(\r\n            <div className={styles.addDataElement}>\r\n            <h1>{this.props.title} </h1>\r\n            <button className={styles.addDataButton} onClick={this.display}>open fields</button>\r\n            {this.state.displayAdd?\r\n            <div className={styles.dataFields}>\r\n                {this.props.childProps.map((element:InputProps,i) => (      \r\n                <InputData title={element.title}\r\n                    inputType={element.inputType}\r\n                    errorMessage={element.errorMessage}\r\n                    type={element.type}\r\n                    ref={this._childElements[i]}\r\n                    key={element.title}\r\n                /> \r\n                ))}\r\n                <button className={`${styles.addDataButton} ${styles.subButton}`} onClick={this.checkData}\r\n                disabled={this.state.isWait?true:false}>submit</button>\r\n                {this.state.isWait?<p>waiting</p>:null}\r\n            </div>:\r\n            null}   \r\n            </div>\r\n        );\r\n    }\r\n    \r\n    display():void {\r\n        this.setState({displayAdd:!this.state.displayAdd});\r\n    }\r\n    checkData():void{\r\n        let isAccept:boolean=true;\r\n        for (let i:number=0; i<this._childElements.length; ++i)\r\n        {\r\n            this._childElements[i].current?.notDisplayError();\r\n            if (this._childElements[i].current?.state.inputValue===\"\" || \r\n            (this._childElements[i].current?.props.inputType===\"number\" \r\n            && +this._childElements[i].current!.state.inputValue<0))\r\n            {\r\n                isAccept=false;\r\n                this._childElements[i].current?.displayError();\r\n            }\r\n            else\r\n                this._childElements[i].current?.notDisplayError();\r\n        }\r\n        if (isAccept)\r\n        {\r\n            for (let i=0;i<this._childElements.length; ++i)\r\n                this._childElements[i].current?.disable();\r\n            this.setState({isWait:true});\r\n            let output=new Map<string,string>();\r\n            this._childElements.forEach((element)=>{\r\n                output.set( element.current?.props.title || \"\",element.current?.state.inputValue || \"\");\r\n            }) \r\n            this.sendData(output);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    idCheck(isIdAccepted:Map<idType,boolean>):void{\r\n        let isAccept:boolean=true;\r\n        isIdAccepted.forEach((value,key)=>{\r\n            if (value===false)\r\n            {\r\n                isAccept=false;\r\n                this._childElementsWithId.get(key)?.current?.displayError();\r\n            }\r\n        })\r\n        if (isAccept)\r\n            this._childElements.forEach((element)=>{\r\n                element.current?.clearInput();\r\n            });\r\n        this.stopWaiting();\r\n    }\r\n\r\n    stopWaiting():void{\r\n        this._childElements.forEach((el)=>{\r\n            el.current?.notDisable();\r\n        })\r\n        this.setState({isWait:false});\r\n    }\r\n\r\n    private sendData(data:Map<string,string>):void{\r\n        switch(this.props.typeOfData){\r\n            case SendType.customer:\r\n                this.props.dataBaseContr.pushCustomer({id_customer:\r\n                    +(data.get(\"ID\") || 0),\r\n                    fname:(data.get(\"First Name\") || \"\"), lname:(data.get(\"Last Name\") || \"\"), \r\n                    date_of_birth:(data.get(\"Date of Birth\") || \"\"),location:(data.get(\"Location\") || \"\")\r\n                });\r\n                break;\r\n            case SendType.order:\r\n                this.props.dataBaseContr.pushOrder({id_order:\r\n                    +(data.get(\"ID\") || 0),\r\n                    customer:+(data.get(\"Customer\") || 0), type:+(data.get(\"Model\") || 0), \r\n                    date_of_order:(data.get(\"Order Date\") || \"\"),\r\n                    date_of_delivery:(data.get(\"Delivery Date\") || \"\"),\r\n                    delivery_type:(data.get(\"Delivery\") || \"\"),\r\n                    });\r\n                  break;\r\n            case SendType.model:\r\n                this.props.dataBaseContr.pushModel({id_model:+(data.get(\"ID\") || 0),\r\n                name:(data.get(\"Name\") || \"\"),price:+(data.get(\"Price\") || 0),category:+(data.get(\"Category\") || 0),\r\n                storage:+(data.get(\"Storage\") || 0)\r\n                });\r\n                break;\r\n            case SendType.category:\r\n                this.props.dataBaseContr.pushCategory({id_category:+(data.get(\"ID\") || 0),\r\n                name:(data.get(\"Name\") || \"\")\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n}\r\n\r\n \r\nexport class InputData extends Component<InputProps,InputState>{\r\n\r\n    \r\n    constructor(props:InputProps,state:InputState){\r\n        super(props)\r\n        this.state=state;\r\n        this.state={isError:false,inputValue:\"\",isDisabled:false};\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.displayError=this.displayError.bind(this);\r\n        this.notDisplayError=this.notDisplayError.bind(this);\r\n        this.clearInput=this.clearInput.bind(this);\r\n    }\r\n\r\n    handleChange(e:React.FormEvent<HTMLInputElement>):void{\r\n        this.setState({inputValue:e.currentTarget.value})\r\n        //this.props.onInputChange(e.currentTarget.value);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.displayError=this.displayError.bind(this);\r\n        this.notDisplayError=this.notDisplayError.bind(this);\r\n        this.clearInput=this.clearInput.bind(this);\r\n        console.log(\"component was mounted\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className={styles.inputFields}>\r\n            <div className={styles.inputInfo}>\r\n                <h2>{this.props.title}</h2>\r\n                {this.state.isError?<h2 className={styles.errorMes}>{this.props.errorMessage}</h2>:null}\r\n            </div>\r\n            <input  placeholder={\"get \"+this.props.title} type={this.props.inputType} value={this.state.inputValue}\r\n                disabled={this.state.isDisabled?true: false}    \r\n                className={`${styles.inputField}`} style={{borderColor:this.state.isError?'red':'black'}}\r\n                onChange={this.handleChange}/>\r\n            </div>)\r\n    }\r\n    displayError():void{\r\n       this.setState({isError:true}); \r\n    }\r\n    notDisplayError():void{\r\n        this.setState({isError:false});\r\n    }\r\n    clearInput():void{\r\n        this.setState({inputValue:\"\"});\r\n    }\r\n    disable():void{\r\n        this.setState({isDisabled:true});\r\n    }\r\n    notDisable():void{\r\n        this.setState({isDisabled:false});\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './styles/mainPage.module.css'\r\n\r\n\r\n\r\nexport class MainPage extends Component{\r\n    render(){\r\n    return(\r\n        <section className={styles.mainPage}>\r\n            <section className={styles.info}>\r\n                <h3 className={`${styles.greeting}`}>Welcome to the mus store database</h3>\r\n                <small>What do you want to do?</small>\r\n                <div className={styles.links}>\r\n                <Link to=\"/inputData\" className={styles.link}>Add some data</Link>\r\n                <Link to=\"/outputData\" className={styles.link}>Find some data</Link>\r\n                </div>\r\n            </section>\r\n        </section>)\r\n    }\r\n}\r\n","export function validate(req: XMLHttpRequest): boolean {\n  return req.status === 200 &&\n  JSON.parse(req.responseText).hasOwnProperty('RESULT');\n}","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n  display: block;\n  width: 350px;\n  margin: 50px auto;\n  padding: 10px;\n  border: 2px solid black;\n  border-radius: 3px;\n\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: xx-large;\n`;\n\nexport const Label = styled.label`\n  background-color: lightgrey;\n\n  border: 2px solid black;\n  border-radius: 3px;\n\n  width: 80%;\n`;\n\nexport const Input = styled.input`\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  ::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  -moz-appearance: textfield;\n\n  display: block;\n  padding: 0.5em;\n  color: black;\n  background-color: lightgrey;\n\n  border: 2px solid black;\n  border-radius: 3px;\n\n  width: 80%;\n  margin-bottom: 0.5em;\n\n  &:hover {\n    background-color: #ddd;\n    outline-style: groove;\n    outline-color: black;\n    outline-offset: 1px;\n  }\n  &:focus {\n    outline-style: groove;\n    outline-color: black;\n    outline-offset: 4px;\n    background-color: #eee;\n  }\n`;\n\nexport const Submit = styled.input`\n  background-color: grey;\n  color: white;\n\n  border: 2px solid black;\n  border-radius: 3px;\n\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: xx-large;\n\n  &:hover {\n    background-color: #333;\n    /* border: 2px solid white; */\n    outline-style: groove;\n    outline-color: black;\n    outline-offset: 1px;\n  }\n  &:active {\n    background-color: #222;\n    /* border: 2px solid white; */\n    outline-style: groove;\n    outline-color: black;\n    outline-offset: 1px;\n  }\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { validate } from \"./net\";\nimport { Div, Input, Label, Submit } from \"./StyledForms\";\n\nfunction queryCustomerOrders(customerId: number): XMLHttpRequest {\n  const xmlHttp = new XMLHttpRequest();\n  xmlHttp.open(\"GET\", \"/func\", false);\n  xmlHttp.setRequestHeader(\n    \"Cache-Control\",\n    `no-cache, no-store, must-revalidate`\n  );\n  xmlHttp.setRequestHeader(\"Expires\", `0`);\n  xmlHttp.setRequestHeader(\"command\", `customer_orders`);\n  xmlHttp.setRequestHeader(\"arg1\", `${customerId}`);\n  xmlHttp.send(null);\n  return xmlHttp;\n}\n\n// const axios = require('axios');\n\n// async function queryOrdersAsyncImpl(customerId: number) {\n//   const resp = await axios.get('/func', {\n//     headers: {\n//       'Cache-Control': 'no-cache, no-store, must-revalidate',\n//       \"Expires\": '0',\n//       \"command\": `customer_orders`,\n//       \"arg1\": `${customerId},`\n//     }\n// }\n\n// async function queryOrdersAsync(customerId: number) {\n//   for(let i = 0; i < 5; ++i) {\n//     try {\n//         return await queryOrdersAsyncImpl()\n//       });\n//     } catch {}\n//   }\n// }\n\nfunction DisplayOrder(props: { order: any }): JSX.Element {\n  return (\n    <tr>\n      <Td>{props.order.id_order}</Td>\n      <Td>{props.order.customer}</Td>\n      <Td>{props.order.type}</Td>\n      <Td>{props.order.date_of_delivery}</Td>\n      <Td>{props.order.date_of_order}</Td>\n      <Td>{props.order.delivery_type}</Td>\n    </tr>\n  );\n}\n\nfunction DisplayCustomerOrders(props: { orders: any }): JSX.Element {\n  return (\n    <TableDiv>\n      <Table>\n        <thead>\n          <tr>\n            <Th>Order Id</Th>\n            <Th>Customer</Th>\n            <Th>Type</Th>\n            <Th>Date of delivery</Th>\n            <Th>Date of order</Th>\n            <Th>Delivery Type</Th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.orders.map((order: any) => (\n            <DisplayOrder order={order} />\n          ))}\n        </tbody>\n      </Table>\n    </TableDiv>\n  );\n}\n\nenum Result {\n  Idle,\n  NoCustomer,\n  NoOrders,\n  ConnectionFailed,\n  Success,\n}\n\nfunction CustomerSearchForm(props: {\n  setCustomerId: React.Dispatch<React.SetStateAction<number>>;\n  setOrders: React.Dispatch<React.SetStateAction<{}>>;\n  setResult: React.Dispatch<React.SetStateAction<Result>>;\n}): JSX.Element {\n  const [customerId, setCustomerId] = useState(1);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        for (let i = 0; i < 5; ++i) {\n          console.log(i);\n          try {\n            const resp = queryCustomerOrders(customerId);\n            // console.log(resp);\n            if (\n              validate(resp)\n            ) {\n              const json = JSON.parse(resp.responseText).RESULT;\n              // console.log(json);\n              if (Array.isArray(json) && json.length > 0) {\n                props.setOrders(json);\n                props.setResult(Result.Success);\n                return;\n              } else {\n                props.setResult(Result.NoOrders);\n                props.setCustomerId(customerId);\n                return;\n              }\n            }\n          } catch (error) {}\n        }\n        props.setResult(Result.ConnectionFailed);\n      }}\n    >\n      <Label htmlFor=\"CustomerId\">Customer Id</Label>\n      <Input\n        type=\"number\"\n        name=\"CustomerId\"\n        required\n        min=\"1\"\n        max={Math.pow(2, 31) - 1}\n        onChange={(e) => {\n          setCustomerId(Number(e.target.value));\n        }}\n      />\n      <Submit type=\"submit\" value=\"Find Customer Orders\" />\n    </form>\n  );\n}\n\nexport default function CustomerSearch(): JSX.Element {\n  const [customerId, setCustomerId] = useState(1);\n  const [orders, setOrders] = useState({});\n  const [result, setResult] = useState(Result.Idle);\n  let jsxFail = <></>;\n  let jsxSuccess = <></>;\n  switch (result) {\n    case Result.NoCustomer:\n      jsxFail = <div>No customer with the given id</div>;\n      break;\n    case Result.NoOrders:\n      jsxFail = <div>No orders for the given customer id={customerId}</div>;\n      break;\n    case Result.ConnectionFailed:\n      jsxFail = <div>Connection Failed</div>;\n      break;\n    case Result.Success:\n      jsxSuccess = <DisplayCustomerOrders orders={orders} />;\n      break;\n  }\n  return (\n    <div>\n      <Div>\n        <CustomerSearchForm\n          setCustomerId={setCustomerId}\n          setOrders={setOrders}\n          setResult={setResult}\n        />\n      {jsxFail}\n      </Div>\n      {jsxSuccess}\n    </div>\n  );\n}\n\nconst TableDiv = styled.div`\n  /* display: block;\n  margin-top: auto;\n\n  padding: 10px;\n  border: 3px solid black;\n\n  font-family: Arial, Helvetica, sans-serif;\n  font-size: 20px; */\n`;\n\nconst Table = styled.table`\n  margin-left: auto;\n  margin-right: auto;\n  border: 3px solid black;\n  border-collapse: collapse;\n`;\n\nconst Th = styled.th`\n  border: 1px solid black;\n`;\n\nconst Td = styled.td`\n  border: 1px solid black;\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { validate } from \"./net\";\nimport { Div, Input, Label, Submit } from \"./StyledForms\";\n\nfunction queryOrder(orderId: number): XMLHttpRequest {\n  const xmlHttp = new XMLHttpRequest();\n  xmlHttp.open(\"GET\", \"/func\", false);\n  xmlHttp.setRequestHeader(\n    \"Cache-Control\",\n    `no-cache, no-store, must-revalidate`\n  );\n  xmlHttp.setRequestHeader(\"Expires\", `0`);\n  xmlHttp.setRequestHeader(\"command\", `order_info`);\n  // console.log(\"order id:\", orderId.toString());\n  xmlHttp.setRequestHeader(\"arg1\", `${orderId}`);\n  xmlHttp.send(null);\n  return xmlHttp;\n}\n\nenum Result {\n  NoOrder,\n  ConnectionFailed,\n  Success,\n  Idle,\n}\n\nfunction SearchForm(props: {\n  setOrderId: React.Dispatch<React.SetStateAction<number>>;\n  setOrder: React.Dispatch<React.SetStateAction<{}>>;\n  setResult: React.Dispatch<React.SetStateAction<Result>>;\n}): JSX.Element {\n  const [orderId, setOrderId] = useState(1);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        for (let i = 0; i < 5; ++i) {\n          console.log(i);\n          try {\n            const resp = queryOrder(Number(orderId));\n            if (\n              validate(resp)\n            ) {\n              const json = JSON.parse(resp.responseText).RESULT;\n              if (json.hasOwnProperty('0')) {\n                props.setOrder(json[0]);\n                props.setResult(Result.Success);\n                return;\n              } else {\n                props.setResult(Result.NoOrder);\n                props.setOrderId(orderId);\n                return;\n              }\n            }\n          } catch (error) {\n            //\n          }\n        }\n        props.setResult(Result.ConnectionFailed);\n        return;\n      }}\n    >\n      <div>\n        <Label htmlFor=\"OrderId\">Order Id</Label>\n        <Input\n          type=\"number\"\n          name=\"OrderId\"\n          required\n          min=\"1\"\n          max={Math.pow(2, 31) - 1}\n          onChange={(e) => setOrderId(Number(e.target.value))}\n        />\n      </div>\n      <div>\n        <Submit type=\"submit\" value=\"Find Order\" />\n      </div>\n    </form>\n  );\n}\n\nfunction DisplayOrder(props: { order: any }): JSX.Element {\n  return (\n    <div>\n      <hr />\n      {/* <ul> */}\n      <Li key=\"orderId\">Order Id: {props.order.id_order}</Li>\n      <Li key=\"customer\">Customer: {props.order.customer}</Li>\n      <Li key=\"type\">Model: {props.order.type}</Li>\n      <Li key=\"dateOfDelivery\">\n        Date of delivery: {props.order.date_of_delivery}\n      </Li>\n      <Li key=\"dateOfOrder\">Date of order: {props.order.date_of_order}</Li>\n      <Li key=\"deliveryType\">Delivery Type: {props.order.delivery_type}</Li>\n      {/* </ul> */}\n    </div>\n  );\n}\n\nexport default function OrderSearch(): JSX.Element {\n  const [order, setOrder] = useState({});\n  const [orderId, setOrderId] = useState(1);\n  const [result, setResult] = useState(Result.Idle);\n  let jsx = <></>;\n  switch (result) {\n    case Result.Success:\n      jsx = <DisplayOrder order={order} />;\n      break;\n    case Result.NoOrder:\n      jsx = (\n        <div>\n          <hr />\n          No order with id={orderId}\n        </div>\n      );\n      break;\n    case Result.ConnectionFailed:\n      jsx = (\n        <div>\n          <hr />\n          Connection Failed\n        </div>\n      );\n      break;\n    // case Result.InvalidId: jsx = <>Invalid Id</>; break;\n  }\n  return (\n    <Div>\n      <SearchForm\n        setOrderId={setOrderId}\n        setOrder={setOrder}\n        setResult={setResult}\n      />\n      {jsx}\n    </Div>\n  );\n}\n\nconst Li = styled.span`\n  display: block;\n\n  border: 2px solid black;\n  border-radius: 3px;\n\n  list-style-type: none;\n  background-color: lightgrey;\n`;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { validate } from \"./net\";\nimport { Div, Input, Label, Submit } from \"./StyledForms\";\n\nfunction queryRevenue(orderId: number, start: string, end: string): XMLHttpRequest {\n  const xmlHttp = new XMLHttpRequest();\n  xmlHttp.open(\"GET\", \"/func\", false);\n  xmlHttp.setRequestHeader(\n    \"Cache-Control\",\n    `no-cache, no-store, must-revalidate`\n  );\n  xmlHttp.setRequestHeader(\"Expires\", `0`);\n  xmlHttp.setRequestHeader(\"command\", `sum_for_period`);\n  xmlHttp.setRequestHeader(\"arg1\", `${orderId}`);\n  xmlHttp.setRequestHeader(\"arg2\", `${start.replaceAll(\"-\", \"/\")}`);\n  xmlHttp.setRequestHeader(\"arg3\", `${end.replaceAll(\"-\", \"/\")}`);\n  xmlHttp.send(null);\n  return xmlHttp;\n}\n\nenum Result {\n  Idle,\n  DateOrderError,\n  Success,\n  ConnectionFailed,\n}\n\nfunction RevenueForm(props: {\n  startDate: string;\n  endDate: string;\n  setRevenue: React.Dispatch<React.SetStateAction<number>>;\n  setOrderId: React.Dispatch<React.SetStateAction<number>>;\n  setStartDate: React.Dispatch<React.SetStateAction<string>>;\n  setEndDate: React.Dispatch<React.SetStateAction<string>>;\n  setResult: React.Dispatch<React.SetStateAction<Result>>;\n}): JSX.Element {\n  const [orderId, setOrderId] = useState(1);\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (new Date(props.startDate) > new Date(props.endDate)) {\n          props.setResult(Result.DateOrderError);\n        }\n        for (let i = 0; i < 5; ++i) {\n          console.log(i);\n          try {\n              const resp = queryRevenue(\n                Number(orderId),\n                props.startDate,\n                props.endDate\n              );\n\n              if (\n                validate(resp)\n              ) {\n                const json = JSON.parse(resp.responseText).RESULT;\n                if (json !== null && json !== '') {\n                  const num = Number(json);\n                  if (!isNaN(num)) {\n                    props.setRevenue(num);\n                    props.setResult(Result.Success);\n                    props.setOrderId(orderId);\n                    return;\n                  }\n                }\n              }\n          } catch (error) {\n            // fml\n          }\n        }\n        props.setResult(Result.ConnectionFailed);\n      }}\n    >\n      <div>\n        <Label htmlFor=\"OrderId\">Model</Label>\n        <Input\n          type=\"number\"\n          name=\"OrderId\"\n          min=\"1\"\n          max={Math.pow(2, 31) - 1}\n          required\n          onChange={(e) => setOrderId(Number(e.target.value))}\n        />\n      </div>\n      <div>\n        <Label htmlFor=\"From\">From</Label>\n        <Input\n          type=\"date\"\n          name=\"From\"\n          required\n          onChange={(e) => props.setStartDate(e.target.value)}\n        />\n      </div>\n      <div>\n        <Label htmlFor=\"To\">To</Label>\n        <Input\n          type=\"date\"\n          name=\"To\"\n          required\n          onChange={(e) => props.setEndDate(e.target.value)}\n        />\n      </div>\n      <Submit type=\"submit\" value=\"Get Revenue\" />\n    </form>\n  );\n}\n\n//orderId == orderType\nexport default function Revenue(): JSX.Element {\n  const [revenue, setRevenue] = useState(NaN);\n  const [result, setResult] = useState(Result.Idle);\n\n  const [orderId, setOrderId] = useState(1);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n\n  let jsx = <></>;\n  switch (result) {\n    case Result.DateOrderError: jsx = <div>Dates should be ordered correctly!</div>; break;\n    case Result.ConnectionFailed:\n      jsx = (\n        <div>\n          <hr />\n          Connection Failed\n        </div>\n      );\n      break;\n    case Result.Success:\n      jsx = (\n        <div>\n          <hr />\n          <Rev>{revenue}</Rev>Revenue for period\n          <br />\n          <Span>from</Span>\n          {startDate}\n          <br />\n          <Span>to</Span>\n          {endDate} <br />\n          for Model {orderId}\n        </div>\n      );\n  }\n  return (\n    <Div>\n      <RevenueForm\n        startDate={startDate}\n        endDate={endDate}\n        setOrderId={setOrderId}\n        setResult={setResult}\n        setRevenue={setRevenue}\n        setStartDate={setStartDate}\n        setEndDate={setEndDate}\n      />\n      {jsx}\n    </Div>\n  );\n}\n\nconst Span = styled.span`\n  display: inline-block;\n  font-family: monospace;\n  width: 3em;\n  background-color: lightgrey;\n`;\n\nconst Rev = styled.div`\n  font-size: 50px;\n  color: green;\n  font-family: monospace;\n`;\n","import React, { useState } from 'react';\r\nimport { RefObject } from 'react';\r\nimport { createRef } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {AddData} from './addData';\r\nimport { MainPage } from './mainPage';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport { IFrontHandler } from './common/commonInterfaces';\r\nimport { idType, SendType } from './common/enumTypes';\r\nimport styles from './styles/frontClass.module.css';\r\nimport Navbar, { NavBarState } from './components/Navbar';\r\nimport CustomerSearch from './components/CustomerSearch';\r\nimport OrderSearch from './components/OrderSearch';\r\nimport Revenue from './components/Revenue';\r\n\r\n\r\nexport class frontClass  {\r\n\r\n    private _customerRef:RefObject<AddData>;\r\n    private _orderRef:RefObject<AddData>;\r\n    private _modelRef:RefObject<AddData>;\r\n    private _catRef:RefObject<AddData>;\r\n    private _dataBaseContr:IFrontHandler;\r\n\r\n    constructor(dataBaseContr:IFrontHandler)\r\n    {\r\n        this._dataBaseContr=dataBaseContr;\r\n        this._customerRef=createRef<AddData>();\r\n        this._orderRef=createRef<AddData>();\r\n        this._modelRef=createRef<AddData>();\r\n        this._catRef=createRef<AddData>();\r\n    }\r\n    render():void{  \r\n      ReactDOM.render(\r\n        <React.StrictMode>\r\n          <Router>\r\n            <Route exact path=\"/\" component={MainPage}/>\r\n            <Route exact path=\"/inputData\" render={()=> (\r\n            <div className={styles.addData}>\r\n              <div className={styles.addDataElements}>\r\n              <AddData title={\"Add Customer\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"wrong id/empty\",type:idType.customer},\r\n                {title:\"First Name\",inputType:\"string\", errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Last Name\",inputType:\"string\", errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Date of Birth\",inputType:\"date\", errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Location\",inputType:\"string\", errorMessage:\"empty field\",type:idType.none}]\r\n              }  \r\n              dataBaseContr={this._dataBaseContr}  typeOfData={SendType.customer}\r\n              ref={this._customerRef}\r\n              />\r\n            <AddData title={\"Add Order\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"wrong id/empty\",type:idType.order},\r\n                {title:\"Customer\",inputType:\"number\",errorMessage:\"wrong id/empty\",type:idType.customer},\r\n                {title:\"Model\",inputType:\"number\",errorMessage:\"wrong id/empty\",type:idType.model},\r\n                {title:\"Order Date\",inputType:\"date\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Delivery Date\",inputType:\"date\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Delivery\",inputType:\"string\",errorMessage:\"empty field\",type:idType.none}]\r\n                }\r\n                dataBaseContr={this._dataBaseContr} typeOfData={SendType.order}\r\n                ref={this._orderRef}\r\n                />\r\n              <AddData title={\"Add Model\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"wrong id/empty\",type:idType.model},\r\n                {title:\"Name\",inputType:\"string\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Price\",inputType:\"number\",errorMessage:\"empty field\",type:idType.none},\r\n                {title:\"Category\",inputType:\"number\",errorMessage:\"wrong id/empty\",type:idType.category},\r\n                {title:\"storage\",inputType:\"number\",errorMessage:\"empty field\",type:idType.none}]\r\n                }\r\n                dataBaseContr={this._dataBaseContr} typeOfData={SendType.model}\r\n                ref={this._modelRef}\r\n              /> \r\n              <AddData title={\"Add Category\"} childProps={[{title:\"ID\",inputType:\"number\",errorMessage:\"wrong id/empty\",type:idType.category},\r\n                {title:\"Name\",inputType:\"string\",errorMessage:\"empty field\",type:idType.none}]\r\n                }\r\n                dataBaseContr={this._dataBaseContr} typeOfData={SendType.category}\r\n                ref={this._catRef}\r\n              />  \r\n              </div>\r\n              <Link to=\"/\" className={styles.link}>return to main page</Link>\r\n              </div>\r\n            )}/>\r\n            <Route exact path=\"/outputData\" render={()=>(\r\n              <div>\r\n                <App />\r\n                <Link to=\"/\" className={styles.outputLink}>return to main page</Link>\r\n              </div>\r\n            )}/>\r\n         </Router>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n      );\r\n    }\r\n    idCheck(result:Map<idType,boolean>, type:SendType):void{\r\n      switch(type){\r\n        case SendType.customer:\r\n          this._customerRef.current?.idCheck(result);\r\n          break;\r\n        case SendType.order:\r\n          this._orderRef.current?.idCheck(result);\r\n          break;\r\n        case SendType.model:\r\n          this._modelRef.current?.idCheck(result);\r\n          break;\r\n        case SendType.category:\r\n          this._catRef.current?.idCheck(result);\r\n          break;\r\n      }\r\n    } \r\n\r\n  \r\n    \r\n    // updateIdOfCustomers(data:Set<number>):void{\r\n    //     this._customerRef.current?.updateExist(0,data);\r\n    //     this._orderRef.current?.updateExist(1,data);\r\n    //     console.log(\"updateIdOfCustomers was called\");\r\n    // }\r\n    // updateIdOfOrders(data:Set<number>):void{\r\n    //     this._orderRef.current?.updateExist(0,data);\r\n    //     console.log(\"updateIdOfOrders was called\");\r\n    // }\r\n\r\n    // updateIdOfModels(data: Set<number>): void{\r\n    //   this._orderRef.current?.updateExist(2,data);\r\n    //   this._modelRef.current?.updateExist(0,data);\r\n    //   console.log(\"updateIdOfModels was called\");\r\n    // }\r\n    // updateIdOfCategories(data:Set<number>):void{\r\n    //   this._modelRef.current?.updateExist(3,data);\r\n    //   this._catRef.current?.updateExist(0,data);\r\n    // }\r\n    \r\n  }\r\n\r\nfunction App(): JSX.Element {\r\n    const [navBarState, setNavBarState] = useState(NavBarState.OrderSearch);\r\n    let jsx = <></>;\r\n    switch(navBarState) {\r\n      case NavBarState.CustomerSearch: jsx = <CustomerSearch/>; break;\r\n      case NavBarState.OrderSearch: jsx = <OrderSearch/>; break;\r\n      case NavBarState.Revenue: jsx = <Revenue/>; break;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar navBarState={navBarState} setNavBarState={setNavBarState}/>\r\n        {jsx}\r\n      </div>\r\n    );}\r\n\r\n","import { ICustomer, IOrder, IModel, ICategory } from \"../common/commonClasses\";\r\nimport { IFrontHandler } from \"../common/commonInterfaces\";\r\nimport { idType, SendType } from \"../common/enumTypes\";\r\nimport { frontClass } from \"../frontClass\";\r\n\r\n\r\n\r\nexport class FrontHandler implements IFrontHandler{\r\n\r\n    private _front?:frontClass;\r\n    readonly url=\"https://mus-market.herokuapp.com/func\";\r\n    private _checkedId: Map<idType, boolean>; //поле для отладки\r\n    \r\n    constructor(){\r\n        this._checkedId=new Map<idType,boolean>();\r\n    }\r\n\r\n    setFront(front:frontClass){\r\n        this._front=front;\r\n    }\r\n\r\n    //функции, вызываемые при отправке данных\r\n    pushCustomer(cust: ICustomer): void {\r\n        let res=this.getResult('add_customer',[`${cust.id_customer}`,`${cust.fname}`,\r\n        `${cust.lname}`,`${cust.fname}`,`${cust.location}`]);\r\n\r\n        let resMap=new Map<idType,boolean>();\r\n        resMap.set(idType.customer,res['id']);\r\n        console.log(resMap);\r\n        this.idChecked(resMap,SendType.customer);\r\n    }\r\n    pushOrder(order: IOrder): void {\r\n        console.log(JSON.stringify(order));\r\n        let res=this.getResult('add_order',[`${order.id_order}`,`${order.customer}`,\r\n        `${order.type}`,`${order.date_of_order}`,`${order.date_of_delivery}`]);\r\n        \r\n        let resMap=new Map<idType,boolean>();\r\n        resMap.set(idType.order,res['id']);\r\n        resMap.set(idType.customer,res['customer']);\r\n        resMap.set(idType.model,res['model']);\r\n        console.log(resMap);\r\n        this.idChecked(resMap,SendType.order);\r\n    }\r\n    pushModel(model: IModel): void {\r\n        console.log(JSON.stringify(model));\r\n\r\n        let res=this.getResult('add_model',[`${model.id_model}`,`${model.name}`,\r\n        `${model.price}`,`${model.category}`,`${model.storage}`]);\r\n        \r\n        let resMap=new Map<idType,boolean>();\r\n        resMap.set(idType.model,res['id']);\r\n        resMap.set(idType.category,res['category']);\r\n        this.idChecked(resMap,SendType.model);\r\n    }\r\n    pushCategory(cat: ICategory): void {\r\n        console.log(JSON.stringify(cat));\r\n        \r\n        let res=this.getResult('add_category',[`${cat.id_category}`,`${cat.name}`]);\r\n        \r\n        let resMap=new Map<idType,boolean>();\r\n        resMap.set(idType.category,res['id']);\r\n        this.idChecked(resMap,SendType.category);\r\n    }\r\n\r\n    //вызывакется при получении данных\r\n    idChecked(data: Map<idType, boolean>, type: SendType): void {\r\n        this._front?.idCheck(data,type);\r\n    }\r\n\r\n    private getResult(command:string,listOfArgs:Array<string>):any{\r\n        const xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open( \"GET\", '/func', false );\r\n        xmlHttp.setRequestHeader('command', command);\r\n        for (let i=1; i<=listOfArgs.length; ++i)\r\n            xmlHttp.setRequestHeader(`arg${i}`,listOfArgs[i-1]);\r\n        xmlHttp.send( null );\r\n        console.log(xmlHttp.responseText);\r\n        let res=JSON.parse(xmlHttp.response)[\"RESULT\"];\r\n        console.log(res);\r\n        return res;\r\n    }\r\n\r\n    // функции для отладки\r\n    // private checkCustomer(cust:ICustomer):void{\r\n    //     this._checkedId=new Map<idType,boolean>();\r\n    //     if (cust.id_customer===1234)\r\n    //         this._checkedId.set(idType.customer,false);\r\n    //     else\r\n    //         this._checkedId.set(idType.customer,true);\r\n    //     setTimeout(_=>{ this.idChecked(this._checkedId,SendType.customer);  },3000);   \r\n    // }\r\n\r\n\r\n    // private checkOrder(order:IOrder):void{\r\n    //     this._checkedId=new Map<idType,boolean>();\r\n    //     if (order.id_order===1234)\r\n    //         this._checkedId.set(idType.order,false);\r\n    //     else \r\n    //         this._checkedId.set(idType.order,true);\r\n    //     if (order.type===1234)\r\n    //         this._checkedId.set(idType.model,false);\r\n    //     else \r\n    //         this._checkedId.set(idType.model,true);\r\n    //     if (order.customer===1234)\r\n    //         this._checkedId.set(idType.customer,false);\r\n    //     else \r\n    //         this._checkedId.set(idType.customer,true);\r\n    //     console.log(order.date_of_order);\r\n    //     setTimeout(_=>{this.idChecked(this._checkedId,SendType.order);},3000);    \r\n    // }\r\n\r\n\r\n    // private checkModel(model:IModel):void{\r\n    //     this._checkedId=new Map<idType,boolean>();\r\n    //     if (model.id_model===1234)\r\n    //         this._checkedId.set(idType.model,false);\r\n    //     else\r\n    //         this._checkedId.set(idType.model,true);\r\n    //     if (model.id_model===1234)\r\n    //         this._checkedId.set(idType.category,false);\r\n    //     else\r\n    //         this._checkedId.set(idType.category,true);  \r\n    //     setTimeout(_=>{this.idChecked(this._checkedId,SendType.model); },3000);  \r\n    // }\r\n    // private checkCategory(cat:ICategory):void{\r\n    //     this._checkedId=new Map<idType,boolean>();\r\n    //     if (cat.id_category===1234)\r\n    //         this._checkedId.set(idType.category,false);\r\n    //     else\r\n    //         this._checkedId.set(idType.category,true);\r\n    //     setTimeout(_=>{this.idChecked(this._checkedId,SendType.category);},3000);      \r\n    // }\r\n\r\n}\r\n\r\n\r\n","\nimport {frontClass} from './frontClass';\nimport { FrontHandler } from './handlers/frontHandler';\n\n\n\n\n\n\n\n\n\nlet handler=new FrontHandler();\nlet front=new frontClass(handler);\nhandler.setFront(front);\n\nfront.render();\n\n"],"sourceRoot":""}